import jsPDF from 'jspdf'

// Client-side calculation function
function calculateClientROI(inputs) {
  const currentMonthlyCost = (inputs.monthlyInvoices * inputs.timePerInvoice / 60 * inputs.hourlyRate) + 
                            (inputs.monthlyInvoices * inputs.errorRate / 100 * inputs.errorCost)
  const currentAnnualCost = currentMonthlyCost * 12
  const newMonthlyCost = inputs.solutionCost / 12 + (inputs.monthlyInvoices * 2 / 60 * inputs.hourlyRate)
  const newAnnualCost = newMonthlyCost * 12
  const annualSavings = currentAnnualCost - newAnnualCost
  const roi = ((annualSavings - inputs.solutionCost) / inputs.solutionCost * 100)
  const paybackMonths = inputs.solutionCost / (currentMonthlyCost - newMonthlyCost)

  return {
    currentAnnualCost: Math.round(currentAnnualCost),
    newAnnualCost: Math.round(newAnnualCost),
    annualSavings: Math.round(annualSavings),
    roi: Math.round(roi * 10) / 10,
    paybackMonths: Math.round(paybackMonths * 10) / 10
  }
}

export function generatePDFReport(inputs, results) {
  const pdf = new jsPDF()
  
  // Header with styling
  pdf.setFontSize(24)
  pdf.setTextColor(0, 100, 200)
  pdf.text('ROI Analysis Report', 20, 30)
  
  pdf.setFontSize(12)
  pdf.setTextColor(0, 0, 0)
  pdf.text(`Generated on: ${new Date().toLocaleDateString()} at ${new Date().toLocaleTimeString()}`, 20, 45)
  
  // Company info section
  pdf.setFontSize(16)
  pdf.setTextColor(0, 100, 200)
  pdf.text('Current Situation Analysis', 20, 70)
  
  pdf.setFontSize(12)
  pdf.setTextColor(0, 0, 0)
  const inputText = [
    `Monthly Invoices: ${inputs.monthlyInvoices.toLocaleString()}`,
    `Time per Invoice: ${inputs.timePerInvoice} minutes`,
    `Hourly Rate: $${inputs.hourlyRate.toLocaleString()}`,
    `Error Rate: ${inputs.errorRate}%`,
    `Cost per Error: $${inputs.errorCost.toLocaleString()}`,
    `Solution Investment: $${inputs.solutionCost.toLocaleString()}`
  ]
  
  inputText.forEach((text, index) => {
    pdf.text(text, 25, 85 + (index * 12))
  })
  
  // Results section
  pdf.setFontSize(16)
  pdf.setTextColor(0, 100, 200)
  pdf.text('Financial Impact Analysis', 20, 170)
  
  pdf.setFontSize(14)
  pdf.setTextColor(0, 0, 0)
  const resultText = [
    `Current Annual Cost: $${results.currentAnnualCost.toLocaleString()}`,
    `New Annual Cost: $${results.newAnnualCost.toLocaleString()}`,
    `Annual Savings: $${results.annualSavings.toLocaleString()}`,
    `Return on Investment: ${results.roi}%`,
    `Payback Period: ${results.paybackMonths} months`
  ]
  
  resultText.forEach((text, index) => {
    if (text.includes('Annual Savings') || text.includes('Return on Investment')) {
      pdf.setTextColor(0, 150, 0) // Green for positive results
    } else {
      pdf.setTextColor(0, 0, 0)
    }
    pdf.text(text, 25, 185 + (index * 12))
  })
  
  // Key insights
  pdf.setFontSize(16)
  pdf.setTextColor(0, 100, 200)
  pdf.text('Key Insights & Recommendations', 20, 250)
  
  pdf.setFontSize(11)
  pdf.setTextColor(0, 0, 0)
  const insights = [
    `â€¢ You can save $${results.annualSavings.toLocaleString()} annually by implementing automation`,
    `â€¢ The solution pays for itself in just ${results.paybackMonths} months`,
    `â€¢ Your ROI of ${results.roi}% demonstrates strong financial benefits`,
    'â€¢ Automation reduces manual errors and improves efficiency',
    'â€¢ Consider implementing across other business processes for additional savings'
  ]
  
  insights.forEach((text, index) => {
    pdf.text(text, 25, 265 + (index * 10))
  })
  
  // Footer
  pdf.setFontSize(10)
  pdf.setTextColor(100, 100, 100)
  pdf.text('Generated by Invoicing ROI Simulator', 20, 290)
  
  const fileName = `ROI-Analysis-${new Date().toISOString().split('T')[0]}.pdf`
  pdf.save(fileName)
}

export function PDFButton({ inputs, results }) {
  const handleDownload = () => {
    // Use provided results or calculate client-side
    const finalResults = results || calculateClientROI(inputs)
    generatePDFReport(inputs, finalResults)
  }

  return (
    <button 
      className="pdf-button" 
      onClick={handleDownload}
      title="Download detailed ROI analysis report"
    >
      ðŸ“„ Download PDF Report
    </button>
  )
}